#!/bin/sh

apk add --no-cache  curl gettext inotify-tools;

cleanup() {
    echo "stopping..."
    kill "$INOTIFY_PID"
    echo "stopped inotifywait"
    exit
}

trap cleanup SIGINT SIGTERM

substituteENV() {
    echo "substituting the values of environment variables in rules..."
    find "$TEMPLATED_RULES_PATH" -type f | while read -r file; do
        f="$(basename "$file")"
        # If the file has a .tmpl or .tpl extension - remove it
        f=${f%".tmpl"} && f=${f%".tpl"}
        envsubst "$SHELL_FORMAT" < "$file" > "$RENDERED_RULES_PATH/$f";
    done;
    touch "$RENDERED_RULES_PATH/rule-watcher-rules-ready"
}

triggerReload() {
    echo "triggering thanos rule reload..."
    if [ "$(curl -s -w "%{http_code}" -X POST "localhost:$RELOAD_PORT/-/reload")" != 200 ]; then 
        echo "error reloading alert rules"
    fi
}

# do initial ENV substituting
substituteENV

# on projected module changes, kube creates new dir "..yyyy_mm_dd_xxx"
# and then moves symlinked dir "..data" to that and deletes old dir
# we will monitor 'DELETE,ISDIR' event of ..yyyy_mm_dd_xxx" delete
# since its the last step in sync files operation
# eg events sequence..
#     /var/thanos/rule-templates/ CREATE,ISDIR ..2024_07_29_13_28_59.2700877023
#     /var/thanos/rule-templates/ CREATE ..data_tmp
#     /var/thanos/rule-templates/ MOVED_FROM ..data_tmp
#     /var/thanos/rule-templates/ MOVED_TO ..data
#     /var/thanos/rule-templates/ DELETE test1.yaml
#     /var/thanos/rule-templates/ DELETE,ISDIR ..2024_07_29_13_27_29.567810463

echo "starting rule-watcher..."
inotifywait -m -r -e delete --format '%e %w %f' "$TEMPLATED_RULES_PATH" |\
while read -r event path name; do
    echo "processing... $event $path $name";
    if [ "$event" != "DELETE,ISDIR" ]; then
        continue
    fi
    # match name to '..2024_07_29_13_27_29.567810463' format
    if ! expr "$name" : '\.\.20[0-9][0-9]_[0-9_]\+\.[0-9]\+$' > /dev/null; then
        continue
    fi

    # clear old rendered rules 
    # (needed as some old files might be removed)
    rm -f "$RENDERED_RULES_PATH"/*
    
    substituteENV
    triggerReload
done &

INOTIFY_PID=$!

wait $INOTIFY_PID

echo "error: rule-watcher stopped"
