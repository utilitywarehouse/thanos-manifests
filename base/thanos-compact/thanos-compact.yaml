apiVersion: v1
kind: Service
metadata:
  labels:
    app: thanos-compact
  name: thanos-compact
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "10902"
    prometheus.io/scrape: "true"
spec:
  ports:
    - port: 10902
      protocol: TCP
      targetPort: http
      name: http-query
  selector:
    app: thanos-compact
  sessionAffinity: None
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: thanos-compact
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-compact
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: thanos-compact
      app.kubernetes.io/name: thanos-compact
  template:
    metadata:
      labels:
        app: thanos-compact
        app.kubernetes.io/name: thanos-compact
      name: thanos-compact
    spec:
      terminationGracePeriodSeconds: 1200
      serviceAccountName: thanos-compact
      containers:
        - name: thanos-compact
          image: thanos
          args:
            - compact
            - --block-viewer.global.sync-block-interval=1h
            - --data-dir=/var/thanos/compact
            - --delete-delay=48h
            - --log.level=warn
            - --objstore.config-file=/etc/thanos/config.yaml
            - --retention.resolution-1h=1y
            - --retention.resolution-5m=1y
            - --retention.resolution-raw=1y
            - --wait
            - --wait-interval=1h
          ports:
            - name: http
              containerPort: 10902
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
              scheme: HTTP
            periodSeconds: 90
            successThreshold: 1
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
              scheme: HTTP
            periodSeconds: 90
            successThreshold: 1
            failureThreshold: 5
            timeoutSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /var/thanos/compact
            - name: thanos-storage
              mountPath: /etc/thanos
          resources:
            requests:
              cpu: 0
              memory: 50Mi
            limits:
              memory: 2Gi
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: thanos-compact
        - name: thanos-storage
          configMap:
            name: thanos-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: thanos-compact
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
